'''
Рекурсия Фрактал - кадрат

Описание:
    deep - Глубина рекурсии (Количество вызовов функцией самой себя)

    Рисуется квадрат со стороной = MN
    Внутри него рисуется квадрат со стороной = MN - alfa
    Создание вложенного квадрата выполняется до тех пор:
        пока глубина рекурсии(deep) >= 1

    Рекурсивный случай:
        Если глубина рекурсии < 1:
            return

'''

# Импортируем библиотеку графического окна
import graphics as gr

# Запускаем "Графическое окно" с Параметрами ("name", ширина, высота)
window = gr.GraphWin("Fractal Square", 600, 600)

# Запрашиваем величину глубины рекурсии (Обязательно: Целое, положительное число!)
alpha = 0.02

# Ф-ция рисования квадрата
def fractal_square(A, B, C, D, deep = 200):

    if deep < 1:
        return
    '''
        Пока временные переменные (M, N) находятся в кортежах (A, B), (B, C), (C, D), (D, A)
            Рисуем линию с точки М в точку N
    '''
    for M, N in (A, B), (B, C), (C, D), (D, A): #  Для (A, B) M = A, N = B

        # (*M и *N) - Развертывание кортежа
        gr.Line(gr.Point(*M), gr.Point(*N)).draw(window)

    '''
    Вычисляем координаты точек для вложенного квадрата:
    
    A1, B1, C1, D1
    
    Передаем полученные координаты точке A1, B1, C1, D1 в параметры вызываемой самой себя ф-ции
    fractal_square и уменьшаем глубину рекурсии на 1
    '''
    A1 = (A[0] * (1 - alpha) + B[0] * alpha, A[1] * (1 - alpha) + B[1] * alpha)
    B1 = (B[0] * (1 - alpha) + C[0] * alpha, B[1] * (1 - alpha) + C[1] * alpha)
    C1 = (C[0] * (1 - alpha) + D[0] * alpha, C[1] * (1 - alpha) + D[1] * alpha)
    D1 = (D[0] * (1 - alpha) + A[0] * alpha, D[1] * (1 - alpha) + A[1] * alpha)

    # Ф-ция fractal_square вызывает саму себя, с измененными параметрами
    fractal_square(A1, B1, C1, D1, deep -1)

'''
Запускаем ф-цию fractal_square с первоначальными параметрами(координатами точек),
 передаваемыми в кортежах
'''
fractal_square((100, 100), (500, 100), (500, 500), (100, 500))