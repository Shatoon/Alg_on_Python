#!/usr/bin/env python3

"""Сортировка Тони Хоара (Quick Sort) рекурсивный тип

    - Ф-ция сортировки массива "def hoar_sort(a)"
        - Крайний случай:
            - Если длинна массива <= 1
                - return
        - Создаем барьерный элемент массива barrier = a[0]
        - Создаем 3 пустых списка left - L, middle - M, right - R
        - Итерируем по списку "а":
            - Если итерируемый элемент списка < барьерного:
                - Отправляем его в список "L", динамично росширяя
                его, методом .append
            - Иначе, если итерируемый элемент списка = барьерному:
                - Отправляем его в список "M", динамично росширяя
                его, методом .append
            - Иначе, если итерируемый элемент списка > барьерному:
                - Отправляем его в список "R", динамично росширяя
                его, методом .append
        - Вызываем ф-цию сортировки массива hoar_sort(a), для
        каждого из списков L и R, чем создаем рекурсию
        -Собираем все отсортированные элементы обратно в список "а"
            - Итерируем через каждый элемент поочередно
            L, M, R - списков, возвращаем их значения в список "а"
"""

def hoar_sort(a):
    if len(a) <= 1:
        return
    barrier = a[0]; L = []; M = []; R = []
    for x in a:
        if x < barrier:
            L.append(x)
        elif x == barrier:
            M.append(x)
        else:
            R.append(x)
    hoar_sort(L)
    hoar_sort(R)
    k = 0
    for x in L + M + R:
        a[k] = x; k += 1

b = [2,7,9,1,3,2,8,4,5,6]
hoar_sort(b)
print(*b)

